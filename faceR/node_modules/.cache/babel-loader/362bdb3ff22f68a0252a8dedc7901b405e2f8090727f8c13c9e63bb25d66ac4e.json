{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Me\\\\Documents\\\\reactApp\\\\FR\\\\facer\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Nav from './components/Nav/Nav.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageForm from './components/ImageForm/ImageForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apikey: 'f36baf527ab24b4a81e6e29271b9c19a'\n});\nconst returnClarifaiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n\n  const PAT = '7330d78c09464c25af395a80a74f336c';\n\n  // Specify the correct user_id/app_id pairings\n\n  // Since you're making inferences outside your app's scope\n\n  const USER_ID = 'p354sp444d4v';\n  const APP_ID = 'face-rec';\n\n  // Change these to whatever model and image URL you want to use\n\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n\n          // \"base64\": IMAGE_BYTES_STRING\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = e => {\n      console.log(e.target.value);\n    };\n    this.onButtonSubmit = () => {\n      console.log(\"click\");\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + \"/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(result => {\n        const regions = result.outputs[0].data.regions;\n        regions.forEach(region => {\n          // Accessing and rounding the bounding box values\n\n          const boundingBox = region.region_info.bounding_box;\n          const topRow = boundingBox.top_row.toFixed(3);\n          const leftCol = boundingBox.left_col.toFixed(3);\n          const bottomRow = boundingBox.bottom_row.toFixed(3);\n          const rightCol = boundingBox.right_col.toFixed(3);\n          region.data.concepts.forEach(concept => {\n            // Accessing and rounding the concept value\n\n            const name = concept.name;\n            const value = concept.value.toFixed(4);\n            console.log(`${name}: ${value} BBox: ${topRow}, ${leftCol}, ${bottomRow}, ${rightCol}`);\n          });\n        });\n      }).catch(error => console.log('error', error));\n    };\n    this.state = {\n      input: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Nav","Logo","ImageForm","Rank","ParticlesBg","Clarifai","jsxDEV","_jsxDEV","app","App","apikey","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","constructor","onInputChange","e","console","log","target","value","onButtonSubmit","fetch","state","input","then","response","json","result","regions","outputs","data","forEach","region","boundingBox","region_info","bounding_box","topRow","top_row","toFixed","leftCol","left_col","bottomRow","bottom_row","rightCol","right_col","concepts","concept","name","catch","error","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Me/Documents/reactApp/FR/facer/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Nav from './components/Nav/Nav.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageForm from './components/ImageForm/ImageForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apikey:'f36baf527ab24b4a81e6e29271b9c19a'\n});\n\nconst returnClarifaiRequestOptions =(imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n\n  const PAT = '7330d78c09464c25af395a80a74f336c';\n\n  // Specify the correct user_id/app_id pairings\n\n  // Since you're making inferences outside your app's scope\n\n  const USER_ID = 'p354sp444d4v';\n\n  const APP_ID = 'face-rec';\n\n  // Change these to whatever model and image URL you want to use\n\n  const MODEL_ID = 'face-detection';\n\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n\n    \"user_app_id\": {\n\n        \"user_id\": USER_ID,\n\n        \"app_id\": APP_ID\n\n    },\n\n    \"inputs\": [\n\n        {\n\n            \"data\": {\n\n                \"image\": {\n\n                    \"url\": IMAGE_URL\n\n                    // \"base64\": IMAGE_BYTES_STRING\n\n                }\n\n            }\n\n        }\n\n    ]\n\n});\n\n\nconst requestOptions = {\n\n    method: 'POST',\n\n    headers: {\n\n        'Accept': 'application/json',\n\n        'Authorization': 'Key ' + PAT\n\n    },\n\n    body: raw\n\n  }\n\n  return requestOptions;\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n    }\n  }\n  onInputChange = (e) => {\n    console.log(e.target.value);\n  }\n\n  onButtonSubmit = () => {\n    console.log(\"click\")\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n\n    .then(response => response.json())\n\n    .then(result => {\n\n\n        const regions = result.outputs[0].data.regions;\n\n\n        regions.forEach(region => {\n\n            // Accessing and rounding the bounding box values\n\n            const boundingBox = region.region_info.bounding_box;\n\n            const topRow = boundingBox.top_row.toFixed(3);\n\n            const leftCol = boundingBox.left_col.toFixed(3);\n\n            const bottomRow = boundingBox.bottom_row.toFixed(3);\n\n            const rightCol = boundingBox.right_col.toFixed(3);\n\n\n            region.data.concepts.forEach(concept => {\n\n                // Accessing and rounding the concept value\n\n                const name = concept.name;\n\n                const value = concept.value.toFixed(4);\n\n\n                console.log(`${name}: ${value} BBox: ${topRow}, ${leftCol}, ${bottomRow}, ${rightCol}`);\n\n                \n\n            });\n\n        });\n\n\n    })\n\n    .catch(error => console.log('error', error));\n  }\n\n  render(){\n    return (\n      <div className='App'>\n        <ParticlesBg type='cobweb' bg={true} />\n        <Nav />\n        <Logo />\n        <Rank />\n        <ImageForm onInputChange = {this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        {/*\n        \n        <FaceRec />*/}\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,SAAS,MAAM,qCAAqC;AAC3D,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAG,IAAIH,QAAQ,CAACI,GAAG,CAAC;EAC3BC,MAAM,EAAC;AACT,CAAC,CAAC;AAEF,MAAMC,4BAA4B,GAAGC,QAAQ,IAAK;EAChD;;EAEA,MAAMC,GAAG,GAAG,kCAAkC;;EAE9C;;EAEA;;EAEA,MAAMC,OAAO,GAAG,cAAc;EAE9B,MAAMC,MAAM,GAAG,UAAU;;EAEzB;;EAEA,MAAMC,QAAQ,GAAG,gBAAgB;EAEjC,MAAMC,SAAS,GAAGL,QAAQ;EAE1B,MAAMM,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IAEzB,aAAa,EAAE;MAEX,SAAS,EAAEN,OAAO;MAElB,QAAQ,EAAEC;IAEd,CAAC;IAED,QAAQ,EAAE,CAEN;MAEI,MAAM,EAAE;QAEJ,OAAO,EAAE;UAEL,KAAK,EAAEE;;UAEP;QAEJ;MAEJ;IAEJ,CAAC;EAIT,CAAC,CAAC;EAGF,MAAMI,cAAc,GAAG;IAEnBC,MAAM,EAAE,MAAM;IAEdC,OAAO,EAAE;MAEL,QAAQ,EAAE,kBAAkB;MAE5B,eAAe,EAAE,MAAM,GAAGV;IAE9B,CAAC;IAEDW,IAAI,EAAEN;EAER,CAAC;EAED,OAAOG,cAAc;AACvB,CAAC;AAGD,MAAMZ,GAAG,SAASV,SAAS,CAAC;EAC1B0B,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC,KAKVC,aAAa,GAAIC,CAAC,IAAK;MACrBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC7B,CAAC;IAAA,KAEDC,cAAc,GAAG,MAAM;MACrBJ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MAEpBI,KAAK,CAAC,qCAAqC,GAAGjB,QAAQ,GAAG,YAAY,GAAG,UAAU,EAAEL,4BAA4B,CAAC,IAAI,CAACuB,KAAK,CAACC,KAAK,CAAC,CAAC,CAElIC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAEjCF,IAAI,CAACG,MAAM,IAAI;QAGZ,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACF,OAAO;QAG9CA,OAAO,CAACG,OAAO,CAACC,MAAM,IAAI;UAEtB;;UAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,WAAW,CAACC,YAAY;UAEnD,MAAMC,MAAM,GAAGH,WAAW,CAACI,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC;UAE7C,MAAMC,OAAO,GAAGN,WAAW,CAACO,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC;UAE/C,MAAMG,SAAS,GAAGR,WAAW,CAACS,UAAU,CAACJ,OAAO,CAAC,CAAC,CAAC;UAEnD,MAAMK,QAAQ,GAAGV,WAAW,CAACW,SAAS,CAACN,OAAO,CAAC,CAAC,CAAC;UAGjDN,MAAM,CAACF,IAAI,CAACe,QAAQ,CAACd,OAAO,CAACe,OAAO,IAAI;YAEpC;;YAEA,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAAI;YAEzB,MAAM5B,KAAK,GAAG2B,OAAO,CAAC3B,KAAK,CAACmB,OAAO,CAAC,CAAC,CAAC;YAGtCtB,OAAO,CAACC,GAAG,CAAE,GAAE8B,IAAK,KAAI5B,KAAM,UAASiB,MAAO,KAAIG,OAAQ,KAAIE,SAAU,KAAIE,QAAS,EAAC,CAAC;UAI3F,CAAC,CAAC;QAEN,CAAC,CAAC;MAGN,CAAC,CAAC,CAEDK,KAAK,CAACC,KAAK,IAAIjC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEgC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAzDC,IAAI,CAAC3B,KAAK,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;EACH;EAwDA2B,MAAMA,CAAA,EAAE;IACN,oBACEvD,OAAA;MAAKwD,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBzD,OAAA,CAACH,WAAW;QAAC6D,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvC/D,OAAA,CAACP,GAAG;QAAAmE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACP/D,OAAA,CAACN,IAAI;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACR/D,OAAA,CAACJ,IAAI;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACR/D,OAAA,CAACL,SAAS;QAACwB,aAAa,EAAI,IAAI,CAACA,aAAc;QAACM,cAAc,EAAE,IAAI,CAACA;MAAe;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAInF,CAAC;EAEV;AACF;AAEA,eAAe7D,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}