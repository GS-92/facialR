{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Me\\\\Documents\\\\reactApp\\\\FR\\\\facer\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Nav from './components/Nav/Nav.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageForm from './components/ImageForm/ImageForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apikey: 'f36baf527ab24b4a81e6e29271b9c19a'\n});\n\n/*const returnClarifaiRequestOptions =(imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n\n  const PAT = '7330d78c09464c25af395a80a74f336c';\n\n  // Specify the correct user_id/app_id pairings\n\n  // Since you're making inferences outside your app's scope\n\n  const USER_ID = 'p354sp444d4v';\n\n  const APP_ID = 'face-rec';\n\n  // Change these to whatever model and image URL you want to use\n\n  const MODEL_ID = 'face-detection';\n\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n\n    \"user_app_id\": {\n\n        \"user_id\": USER_ID,\n\n        \"app_id\": APP_ID\n\n    },\n\n    \"inputs\": [\n\n        {\n\n            \"data\": {\n\n                \"image\": {\n\n                    \"url\": IMAGE_URL\n\n                    // \"base64\": IMAGE_BYTES_STRING\n\n                }\n\n            }\n\n        }\n\n    ]\n\n});\n\n\nconst requestOptions = {\n\n    method: 'POST',\n\n    headers: {\n\n        'Accept': 'application/json',\n\n        'Authorization': 'Key ' + PAT\n\n    },\n\n    body: raw\n\n  }\n\n  return requestOptions;\n}*/\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = e => {\n      console.log(e.target.value);\n    };\n    this.onButtonSubmit = () => {\n      console.log(\"click\");\n      fetch(\"https://api.clarifai.com/v2/models/\" + returnClarifaiRequestOptions.MODEL_ID + \"/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(result => {}).catch(error => console.log('error', error));\n    };\n    this.state = {\n      input: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Nav","Logo","ImageForm","Rank","ParticlesBg","Clarifai","jsxDEV","_jsxDEV","app","App","apikey","constructor","onInputChange","e","console","log","target","value","onButtonSubmit","fetch","returnClarifaiRequestOptions","MODEL_ID","state","input","then","response","json","result","catch","error","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Me/Documents/reactApp/FR/facer/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Nav from './components/Nav/Nav.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageForm from './components/ImageForm/ImageForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apikey:'f36baf527ab24b4a81e6e29271b9c19a'\n});\n\n/*const returnClarifaiRequestOptions =(imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n\n  const PAT = '7330d78c09464c25af395a80a74f336c';\n\n  // Specify the correct user_id/app_id pairings\n\n  // Since you're making inferences outside your app's scope\n\n  const USER_ID = 'p354sp444d4v';\n\n  const APP_ID = 'face-rec';\n\n  // Change these to whatever model and image URL you want to use\n\n  const MODEL_ID = 'face-detection';\n\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n\n    \"user_app_id\": {\n\n        \"user_id\": USER_ID,\n\n        \"app_id\": APP_ID\n\n    },\n\n    \"inputs\": [\n\n        {\n\n            \"data\": {\n\n                \"image\": {\n\n                    \"url\": IMAGE_URL\n\n                    // \"base64\": IMAGE_BYTES_STRING\n\n                }\n\n            }\n\n        }\n\n    ]\n\n});\n\n\nconst requestOptions = {\n\n    method: 'POST',\n\n    headers: {\n\n        'Accept': 'application/json',\n\n        'Authorization': 'Key ' + PAT\n\n    },\n\n    body: raw\n\n  }\n\n  return requestOptions;\n}*/\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n    }\n  }\n  onInputChange = (e) => {\n    console.log(e.target.value);\n  }\n\n  onButtonSubmit = () => {\n    console.log(\"click\")\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + returnClarifaiRequestOptions.MODEL_ID + \"/outputs\", returnClarifaiRequestOptions(this.state.input)) .then(response => response.json())\n\n    .then(result => {\n\n\n    })\n\n  .catch(error => console.log('error', error));\n  }\n\n  render(){\n    return (\n      <div className='App'>\n        <ParticlesBg type='cobweb' bg={true} />\n        <Nav />\n        <Logo />\n        <Rank />\n        <ImageForm onInputChange = {this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        {/*\n        \n        <FaceRec />*/}\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,SAAS,MAAM,qCAAqC;AAC3D,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAG,IAAIH,QAAQ,CAACI,GAAG,CAAC;EAC3BC,MAAM,EAAC;AACT,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMD,GAAG,SAASV,SAAS,CAAC;EAC1BY,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC,KAKVC,aAAa,GAAIC,CAAC,IAAK;MACrBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC7B,CAAC;IAAA,KAEDC,cAAc,GAAG,MAAM;MACrBJ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MAEpBI,KAAK,CAAC,qCAAqC,GAAGC,4BAA4B,CAACC,QAAQ,GAAG,UAAU,EAAED,4BAA4B,CAAC,IAAI,CAACE,KAAK,CAACC,KAAK,CAAC,CAAC,CAAEC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAEnLF,IAAI,CAACG,MAAM,IAAI,CAGhB,CAAC,CAAC,CAEHC,KAAK,CAACC,KAAK,IAAIf,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEc,KAAK,CAAC,CAAC;IAC5C,CAAC;IAnBC,IAAI,CAACP,KAAK,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;EACH;EAkBAO,MAAMA,CAAA,EAAE;IACN,oBACEvB,OAAA;MAAKwB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBzB,OAAA,CAACH,WAAW;QAAC6B,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvC/B,OAAA,CAACP,GAAG;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACP/B,OAAA,CAACN,IAAI;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACR/B,OAAA,CAACJ,IAAI;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACR/B,OAAA,CAACL,SAAS;QAACU,aAAa,EAAI,IAAI,CAACA,aAAc;QAACM,cAAc,EAAE,IAAI,CAACA;MAAe;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAInF,CAAC;EAEV;AACF;AAEA,eAAe7B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}